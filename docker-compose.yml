version: '3.8'

services:
  dbank-assignment-mongodb:
    image: mongo:4.0
    command: mongod --port 5415 --auth
    container_name: "dbank-assignment-db"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=assignment-admin
      - MONGO_INITDB_ROOT_PASSWORD=uF*3lviO0iaZcKTT479_t
      - MONGO_INITDB_DATABASE=dbank-assignment
    ports:
      - 5415:5415
    networks:
      - assignment-db-dockernet
    volumes:
      - db-assignment-volume:/data/db

  transaction-producer:
    build:
      context: ./transaction_producer
      dockerfile: Dockerfile
    container_name: transaction-producer
    ports:
      - "8080:8080"
    depends_on:
      - dbank-assignment-mongodb
    networks:
      - assignment-db-dockernet
    volumes:
      - ./logs:/var/log
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  fraud-detector:
    build:
      context: ./fraud_detector
      dockerfile: Dockerfile
    container_name: fraud-detector
    depends_on:
      kafka:
        condition: service_started
      dbank-assignment-mongodb:
        condition: service_started
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - SPRING_KAFKA_CONSUMER_GROUP_ID=fraud-detector-group
      - SPRING_KAFKA_TOPICS_TRANSACTION_EVENTS=transaction-events
      - SPRING_DATA_MONGODB_URI=mongodb://assignment-admin:uF*3lviO0iaZcKTT479_t@dbank-assignment-mongodb:5415/dbank-assignment?authSource=admin
      - LOGGING_LEVEL_ROOT=INFO
      - LOGGING_LEVEL_COM_FURKANALNIAK=DEBUG
      - LOGGING_LEVEL_ORG_APACHE_KAFKA=TRACE
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_KAFKA=TRACE
    networks:
      - assignment-db-dockernet
    restart: on-failure

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - assignment-db-dockernet

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      zookeeper:
        condition: service_started
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_NUM_PARTITIONS: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_LOG_RETENTION_MS: 3600000
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 300000
    networks:
      - assignment-db-dockernet

volumes:
  db-assignment-volume:

networks:
  assignment-db-dockernet:
    driver: bridge 